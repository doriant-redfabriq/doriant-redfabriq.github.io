{"version":3,"file":"component---src-pages-centers-tsx-db1fef0e3383d1703928.js","mappings":"gLAgFA,UApE2C,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACpCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OACEC,EAAAA,cAACC,EAAAA,EAAD,CAAQC,YAAU,GAChBF,EAAAA,cAACG,EAAAA,GAAD,CAAWC,UAAU,SAASC,GAAG,QAC/BL,EAAAA,cAACM,EAAAA,GAAD,CAAMC,MAAM,cAAcC,WAAW,MAAMC,GAAG,WAC3CX,EAAKD,KAAKa,WAAWC,MAExBX,EAAAA,cAACY,EAAAA,GAAD,KAAQd,EAAKD,KAAKgB,MAAMF,OAE1BX,EAAAA,cAACc,EAAAA,EAAD,CAAKC,OAAO,UACZf,EAAAA,cAACG,EAAAA,GAAD,CAAWE,GAAG,QACZL,EAAAA,cAACM,EAAAA,GAAD,CAAMC,MAAM,WAAWC,WAAW,OAAlC,oBAGAR,EAAAA,cAACgB,EAAAA,GAAD,CAASC,GAAG,UAAUR,GAAG,WACzBT,EAAAA,cAACkB,EAAAA,GAAD,CAAMC,QAAS,CAAC,MAAO,UAAW,GAAI,kBAAmBC,QAAQ,QAC9DrB,EAAQsB,MAAMC,KAAI,SAACC,EAAQC,GAAT,OACjBxB,EAAAA,cAACyB,EAAAA,GAAD,CAAMC,IAAKF,EAAKG,GAAIJ,EAAOK,KACzB5B,EAAAA,cAACM,EAAAA,GAAD,CAAMuB,KAAK,KAAKtB,MAAM,WAAWC,WAAW,MAAMC,GAAG,UAClDc,EAAO1B,KAAKgB,MAAMF,MAErBX,EAAAA,cAACM,EAAAA,GAAD,CAAMG,GAAG,UAAUc,EAAO1B,KAAKiC,QAAQnB,MACvCX,EAAAA,cAACM,EAAAA,GAAD,cAAaiB,EAAO1B,KAAKkC,aAAapB,MACtCX,EAAAA,cAACM,EAAAA,GAAD,gBAAeiB,EAAO1B,KAAKmC,MAAMrB","sources":["webpack://audiplus/./src/pages/centers.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from 'components/Layout'\nimport { Title, Text, Grid } from 'components/theme'\nimport Map from 'components/Map'\nimport { Container, Divider } from 'styles/globalStyle'\nimport { CentersPageTypes } from 'types/centersTypes'\n\ntype CentersPageParams = {\n  data: CentersPageTypes\n}\n\nconst CentersPage: FC<CentersPageParams> = ({ data }) => {\n  const { page, centers } = data\n\n  return (\n    <Layout onlyFooter>\n      <Container textAlign=\"center\" py=\"4rem\">\n        <Text color=\"primary.700\" fontWeight=\"600\" mb=\"0.75rem\">\n          {page.data.subheading.text}\n        </Text>\n        <Title>{page.data.title.text}</Title>\n      </Container>\n      <Map height=\"513px\" />\n      <Container py=\"4rem\">\n        <Text color=\"gray.100\" fontWeight=\"600\">\n          Tous nos centres\n        </Text>\n        <Divider mt=\"0.75rem\" mb=\"2.5rem\" />\n        <Grid columns={['1fr', '1fr 1fr', '', 'repeat(4, 1fr)']} spacing=\"2rem\">\n          {centers.nodes.map((center, idx) => (\n            <Link key={idx} to={center.url}>\n              <Text size=\"lg\" color=\"gray.900\" fontWeight=\"600\" mb=\"0.5rem\">\n                {center.data.title.text}\n              </Text>\n              <Text mb=\"0.5rem\">{center.data.address.text}</Text>\n              <Text>TÃ©l : {center.data.phone_number.text}</Text>\n              <Text>Email : {center.data.email.text}</Text>\n            </Link>\n          ))}\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    page: prismicListCentersPage {\n      data {\n        title {\n          text\n        }\n        subheading {\n          text\n        }\n      }\n    }\n    centers: allPrismicCenters {\n      nodes {\n        data {\n          title {\n            text\n          }\n          phone_number {\n            text\n          }\n          email {\n            text\n          }\n          address {\n            text\n          }\n        }\n        url\n      }\n    }\n  }\n`\n\nexport default CentersPage\n"],"names":["data","page","centers","React","Layout","onlyFooter","Container","textAlign","py","Text","color","fontWeight","mb","subheading","text","Title","title","Map","height","Divider","mt","Grid","columns","spacing","nodes","map","center","idx","Link","key","to","url","size","address","phone_number","email"],"sourceRoot":""}