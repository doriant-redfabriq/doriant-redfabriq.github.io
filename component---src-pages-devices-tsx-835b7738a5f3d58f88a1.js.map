{"version":3,"file":"component---src-pages-devices-tsx-835b7738a5f3d58f88a1.js","mappings":"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","sources":["webpack://audiplus/./src/components/ProductFeatures.tsx","webpack://audiplus/./src/helpers/renderStars.tsx","webpack://audiplus/./src/pages/devices.tsx"],"sourcesContent":["import { renderStars } from 'helpers/renderStars'\nimport React, { FC } from 'react'\nimport { Box, Circle, Flex } from 'styles/globalStyle'\nimport { ProductsFeaturesType } from 'types/devicesPageTypes'\nimport { Icons, Text } from './theme'\nimport { IconsName } from './theme/Icons'\n\ntype ProductFeaturesParams = {\n  list: ProductsFeaturesType\n}\n\nconst ProductFeatures: FC<ProductFeaturesParams> = ({ list }) => {\n  const data = [\n    { icon: 'tag', text: `Type: ${list.type.text}` },\n    { icon: 'flag', text: `Classe: ${list.class.text}` },\n    { icon: 'headphones', text: `Perte Auditive: ${list.hearing_loss.text}` },\n    { icon: 'droplet', text: `Étanche : ${list.etanche.text}` },\n    {\n      icon: 'volume',\n      text: `Réduction de bruit active :`,\n      rating: list.active_noise_reduction,\n    },\n    {\n      icon: 'volume',\n      text: 'Réduction d’acouphène :',\n      rating: list.tinnitus_reduction,\n    },\n    {\n      icon: 'user',\n      text: 'Retour client :',\n      rating: list.feedback_client,\n    },\n    {\n      icon: 'award',\n      text: 'Note Audiplus :',\n      rating: list.rating_audiplus,\n    },\n    {\n      icon: 'shopping-cart',\n      text: `Disponibilité : ${list.availability.text}`,\n    },\n  ]\n  return (\n    <Box>\n      {data.map((item, idx) => (\n        <Flex key={idx} mb={idx !== data.length - 1 ? '1rem' : 0}>\n          <Circle bg=\"primary.25\" width=\"1.5rem\" height=\"1.5rem\">\n            <Icons\n              name={item.icon as IconsName}\n              width=\"0.75rem\"\n              height=\"0.75rem\"\n              color=\"primary.600\"\n            />\n          </Circle>\n          <Flex alignItems=\"center\">\n            <Text ml=\"0.75rem\">{item.text}</Text>\n            {item.rating && renderStars(item.rating)}\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default ProductFeatures\n","import React, { Fragment } from 'react'\nimport { Icons } from 'components/theme'\nimport { Flex } from 'styles/globalStyle'\n\nexport const renderStars = (rating: number) => {\n  const list = [...Array(rating).keys()]\n\n  return (\n    <Flex ml=\"0.5rem\">\n      {list.map((nbr) => (\n        <Fragment key={nbr}>\n          <Icons name=\"star\" width=\"0.75rem\" height=\"0.75rem\" />\n        </Fragment>\n      ))}\n    </Flex>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport Layout from 'components/Layout'\nimport { Title, Text, Grid, Button, Select } from 'components/theme'\nimport { DevicesPageTypes, SelectOptionType } from 'types/devicesPageTypes'\nimport { Box, Card, Container, Flex } from 'styles/globalStyle'\nimport ProductFeatures from 'components/ProductFeatures'\n\ntype DevicesPageParams = {\n  data: DevicesPageTypes\n}\n\nconst DevicesPage: FC<DevicesPageParams> = ({ data }) => {\n  const [products, setProducts] = useState(data.products.nodes)\n  const [currentBrand, setBrand] = useState<SelectOptionType | null>(null)\n  const { title, subheading } = data.prismicDevicesPage.data\n  const brands = data.productsBrands.nodes.map((brand, idx) => {\n    return { id: idx, value: brand.uid, label: brand.data.name.text }\n  })\n  const filterBrand = (val: SelectOptionType) => {\n    setBrand(val)\n    if (val) {\n      setProducts(\n        data.products.nodes.filter(\n          (product) => product.data.brand.document.uid === val.value\n        )\n      )\n    } else {\n      setProducts(data.products.nodes)\n    }\n  }\n\n  return (\n    <Layout>\n      <Container mt=\"6rem\">\n        <Text color=\"primary.700\" mb=\"0.75rem\" fontWeight=\"600\">\n          {subheading.text}\n        </Text>\n        <Title size=\"md\">{title.text}</Title>\n        <Box mt=\"2rem\" width=\"384px\" position=\"relative\">\n          <Text size=\"sm\" mb=\"0.375rem\" fontWeight=\"500\" color=\"gray.700\">\n            Choississez votre marque parmi nos sélections\n          </Text>\n          <Select\n            options={brands}\n            placeholder=\"Sélectionner une marque\"\n            value={currentBrand}\n            onChange={filterBrand}\n          />\n        </Box>\n        <Grid\n          columns={['1fr', 'repeat(2, 1fr)', '', 'repeat(3, 1fr)']}\n          spacing=\"2rem\"\n          mt=\"5rem\"\n        >\n          {products.map((product, idx) => (\n            <Card key={idx} padding=\"2rem 2rem 2.5rem\" position=\"relative\">\n              <Box position=\"absolute\" top=\"-2rem\" right=\"0\">\n                <GatsbyImage\n                  alt={`${product.data.name.text} image`}\n                  image={product.data.product_image.gatsbyImageData}\n                  style={{ maxHeight: '146px', maxWidth: '160px' }}\n                  objectFit=\"contain\"\n                />\n              </Box>\n              <Text\n                size=\"xl\"\n                fontWeight=\"600\"\n                color=\"gray.900\"\n                mr=\"6rem\"\n                mb=\"1.5rem\"\n              >\n                {product.data.name.text}\n              </Text>\n              <ProductFeatures list={product.data} />\n              <Flex flexDirection=\"column\" mt=\"2rem\">\n                <Button type=\"gradient\" size=\"xl\" mb=\"0.75rem\">\n                  Essayer gratuitement\n                </Button>\n                <Button type=\"light\" size=\"xl\">\n                  Demander un devis\n                </Button>\n              </Flex>\n            </Card>\n          ))}\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    prismicDevicesPage {\n      data {\n        title {\n          text\n        }\n        subheading {\n          text\n        }\n      }\n    }\n    productsBrands: allPrismicProductBrands {\n      nodes {\n        data {\n          name {\n            text\n          }\n        }\n        uid\n      }\n    }\n    products: allPrismicProducts {\n      nodes {\n        data {\n          ...PrismicDevicesPageTypeFragment\n        }\n      }\n    }\n  }\n`\n\nexport default DevicesPage\n"],"names":["list","data","icon","text","type","class","hearing_loss","etanche","rating","active_noise_reduction","tinnitus_reduction","feedback_client","rating_audiplus","availability","React","Box","map","item","idx","Flex","key","mb","length","Circle","bg","width","height","Icons","name","color","alignItems","Text","ml","Array","keys","nbr","Fragment","renderStars","useState","products","nodes","setProducts","currentBrand","setBrand","prismicDevicesPage","title","subheading","brands","productsBrands","brand","id","value","uid","label","Layout","Container","mt","fontWeight","Title","size","position","Select","options","placeholder","onChange","val","filter","product","document","Grid","columns","spacing","Card","padding","top","right","GatsbyImage","alt","image","product_image","gatsbyImageData","style","maxHeight","maxWidth","objectFit","mr","ProductFeatures","flexDirection","Button"],"sourceRoot":""}