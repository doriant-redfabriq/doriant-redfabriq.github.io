{"version":3,"file":"component---src-templates-basic-page-tsx-04c56c23e7d096651d40.js","mappings":"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","sources":["webpack://audiplus/./src/components/CardSection/styled.ts","webpack://audiplus/./src/components/CardSection/index.tsx","webpack://audiplus/./src/components/ProductsSection/index.tsx","webpack://audiplus/./src/components/RichTextSection/index.tsx","webpack://audiplus/./src/components/FeaturesSection/index.tsx","webpack://audiplus/./src/components/BannerSection/index.tsx","webpack://audiplus/./src/components/TimelineSection/style.ts","webpack://audiplus/./src/components/TimelineSection/index.tsx","webpack://audiplus/./src/components/FAQSection/index.tsx","webpack://audiplus/./src/components/QuoteSection/style.ts","webpack://audiplus/./src/components/QuoteSection/index.tsx","webpack://audiplus/./src/components/SliceSection.tsx","webpack://audiplus/./src/templates/basicPage.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const StyledHead = styled.div`\n  margin-bottom: 4rem;\n  h2 {\n    margin: 0.75rem 0 1.25rem;\n  }\n`\n\nexport const StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  .gatsby-image-wrapper {\n    margin-bottom: 2rem;\n  }\n`\n","import React, { FC } from 'react'\nimport { Box, Container, ImageBorder } from 'styles/globalStyle'\nimport { Title, Grid, Button, Text } from '../theme'\nimport { StyledCard, StyledHead } from './styled'\nimport { CardSectionTypes } from 'types/sections'\n\ntype CardSectionParams = {\n  data: CardSectionTypes\n}\n\nconst CardSection: FC<CardSectionParams> = ({ data }) => {\n  const { primary, items } = data\n  return (\n    <Box bg=\"primary.25\" as=\"section\">\n      <Container py={['4rem', '5rem']} as=\"div\">\n        <StyledHead>\n          <Text color=\"primary.700\" fontWeight=\"600\">\n            {primary.subheading.text}\n          </Text>\n          <Title size=\"sm\" as=\"h2\">\n            {primary.title.text}\n          </Title>\n          <Text size=\"xl\">{primary.subtitle.text}</Text>\n        </StyledHead>\n        <Grid\n          columns={['1fr', '', 'repeat(2, 1fr)', 'repeat(3, 1fr)']}\n          spacing={['3rem', '2rem']}\n        >\n          {items.map((card, idx) => (\n            <StyledCard key={idx}>\n              <ImageBorder\n                alt={card.image.alt}\n                image={card.image.gatsbyImageData}\n              />\n              <Text size=\"sm\" color=\"primary.700\" fontWeight=\"600\">\n                {card.subheading.text}\n              </Text>\n              <Text size=\"xl\" my=\"0.75rem\" fontWeight=\"600\" color=\"gray.900\">\n                {card.title.text}\n              </Text>\n              <Text mb=\"2rem\" flex=\"1\">\n                {card.description.text}\n              </Text>\n              <Button type=\"gradient\" size=\"xl\" to={card.button_link.url}>\n                {card.button_text.text}\n              </Button>\n            </StyledCard>\n          ))}\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\nexport default CardSection\n","import React, { FC } from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { Box, Container, Flex } from 'styles/globalStyle'\nimport { Button, Grid, Text, Title } from 'components/theme'\nimport { ProductsSectionTypes } from 'types/sections'\n\nexport type ProductsSectionParams = {\n  data: ProductsSectionTypes\n}\n\nconst ProductsSection: FC<ProductsSectionParams> = ({ data }) => {\n  const { primary, items } = data\n  return (\n    <Box bg={primary.background} as=\"section\" textAlign=\"center\">\n      <Container pt={['4rem', '4.5rem']} pb={['4rem', '7.5rem']} as=\"div\">\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          maxWidth=\"768px\"\n          m=\"0 auto\"\n        >\n          {primary.subheading.text && (\n            <Text color=\"primary.700\" fontWeight=\"600\" mb=\"0.75rem\">\n              {primary.subheading.text}\n            </Text>\n          )}\n          <Title as=\"h2\" size=\"sm\" mb=\"1.25rem\">\n            {primary.title.text}\n          </Title>\n          <Text size=\"xl\" mb=\"2.5rem\">\n            {primary.description.text}\n          </Text>\n          {primary.button_text.text && (\n            <Button\n              type=\"gradient\"\n              size=\"xl\"\n              to={primary.button_link.url}\n              mb=\"4rem\"\n            >\n              {primary.button_text.text}\n            </Button>\n          )}\n        </Box>\n        <Grid\n          columns={['1fr', 'repeat(2, 1fr)', `repeat(3, 1fr)`]}\n          spacing=\"2rem\"\n        >\n          {items.map((product, idx) => {\n            const itemBrand = product.product_brands.document?.data\n\n            if (itemBrand) {\n              return (\n                <Link\n                  key={idx}\n                  to={`/brand/${product.product_brands.document.uid}`}\n                >\n                  <Flex flexDirection=\"column\" height=\"100%\">\n                    <GatsbyImage\n                      image={itemBrand.image.gatsbyImageData}\n                      alt={itemBrand.image.alt}\n                      style={{ flex: 1 }}\n                    />\n                    <Text\n                      size=\"xl\"\n                      m={['2rem 0 0.25rem', '4rem 0 0.25rem']}\n                      textTransform=\"uppercase\"\n                      fontWeight=\"600\"\n                      color=\"gray.900\"\n                    >\n                      {itemBrand.name.text}\n                    </Text>\n                    <Text>Fournisseur d’aides auditives et d’accessoires.</Text>\n                  </Flex>\n                </Link>\n              )\n            } else {\n              return (\n                <Box key={idx}>\n                  <GatsbyImage\n                    image={product.image.gatsbyImageData}\n                    alt={product.image.alt}\n                  />\n                  <Text\n                    size=\"xl\"\n                    m={['2rem 0 0.25rem', '4rem 0 0.25rem']}\n                    textTransform=\"uppercase\"\n                    fontWeight=\"600\"\n                    color=\"gray.900\"\n                  >\n                    {product.title.text}\n                  </Text>\n                  <Text size=\"lg\" color=\"primary.700\" mb=\"1rem\">\n                    {product.subtitle.text}\n                  </Text>\n                  <Text>{product.description.text}</Text>\n                </Box>\n              )\n            }\n          })}\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\n\nexport default ProductsSection\n","import React, { FC } from 'react'\nimport { Button, Grid, Text, Title } from 'components/theme'\nimport { Box, Container, ImageBorder } from 'styles/globalStyle'\nimport { RichTextSectionTypes } from 'types/sections'\n\ntype RichTextParams = {\n  data: RichTextSectionTypes\n}\n\nconst RichTextSection: FC<RichTextParams> = ({ data }) => {\n  const { primary } = data\n  return (\n    <Box bg=\"primary.600\" as=\"section\">\n      <Container py={['4rem', '5rem']} as=\"div\">\n        <Grid\n          columns={['1fr', 'repeat(2, 1fr)']}\n          spacing=\"4rem\"\n          alignItems=\"center\"\n        >\n          <Box>\n            {primary.subheading.text && (\n              <Text fontWeight=\"600\" mb=\"0.75rem\" color=\"white\">\n                {primary.subheading.text}\n              </Text>\n            )}\n            <Title as=\"h2\" size=\"sm\" mb=\"2.5rem\" color=\"white\">\n              {primary.title.text}\n            </Title>\n            <Text size=\"lg\" mb=\"2.5rem\" color=\"white\">\n              {primary.description.text}\n            </Text>\n            <Button type=\"light\" to={primary.button_link.url}>\n              {primary.button_text.text}\n            </Button>\n          </Box>\n          <Box>\n            <ImageBorder\n              image={primary.image.gatsbyImageData}\n              alt={primary.image.alt}\n            />\n          </Box>\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\nexport default RichTextSection\n","import React, { FC } from 'react'\nimport { Box, Circle, Container, Flex, ImageBorder } from 'styles/globalStyle'\nimport { Title, Text, Grid, Button } from 'components/theme'\nimport Icons, { IconsName } from 'components/theme/Icons'\nimport { FeaturesSectionTypes } from 'types/sections'\n\nexport type FeaturesSectionParams = {\n  data: FeaturesSectionTypes\n}\n\nconst FeaturesSection: FC<FeaturesSectionParams> = ({ data }) => {\n  const { primary, items } = data\n  return (\n    <Container pt={['4rem', '5rem']} pb={['4rem', '7.5rem']}>\n      <Box mb=\"4rem\" maxWidth=\"768px\">\n        {primary.subheading.text && (\n          <Text color=\"primary.700\" fontWeight=\"600\" mb=\"0.75rem\">\n            {primary.subheading.text}\n          </Text>\n        )}\n        <Title as=\"h2\" size=\"sm\" mb=\"1.25rem\">\n          {primary.title.text}\n        </Title>\n        <Text size=\"xl\">{primary.subtitle.text}</Text>\n      </Box>\n      <Grid\n        columns={['1fr', 'repeat(2, 1fr)']}\n        spacing=\"4rem\"\n        alignItems=\"center\"\n      >\n        <Flex flexDirection=\"column\">\n          {items.map((item, idx) => (\n            <Flex key={idx} mb=\"2rem\" alignItems=\"baseline\">\n              <Circle\n                width=\"3rem\"\n                height=\"3rem\"\n                bg=\"primary.25\"\n                color=\"primary.600\"\n              >\n                <Icons\n                  name={item.icon as IconsName}\n                  width=\"1.5rem\"\n                  height=\"1.5rem\"\n                />\n              </Circle>\n              <Box ml=\"1rem\">\n                <Text size=\"xl\" fontWeight=\"500\" color=\"gray.900\" mb=\"1.25rem\">\n                  {item.title.text}\n                </Text>\n                <Flex alignItems=\"center\">\n                  <Button type=\"link\" mr=\"0.5rem\" to={item.button_link.url}>\n                    {item.button_text.text}\n                  </Button>\n                  <Icons\n                    name=\"arrow-right\"\n                    width=\"1rem\"\n                    height=\"1rem\"\n                    color=\"primary.700\"\n                  />\n                </Flex>\n              </Box>\n            </Flex>\n          ))}\n        </Flex>\n        <ImageBorder\n          image={primary.image.gatsbyImageData}\n          alt={primary.image.alt}\n        />\n      </Grid>\n    </Container>\n  )\n}\nexport default FeaturesSection\n","import React, { FC } from 'react'\nimport Icons, { IconsName } from 'components/theme/Icons'\nimport { Title, Text, Grid, Button } from 'components/theme'\nimport { Box, Circle, Container } from 'styles/globalStyle'\nimport { BannerSectionTypes } from 'types/sections'\n\nexport type BannerSectionParams = {\n  data: BannerSectionTypes\n}\n\nconst BannerSection: FC<BannerSectionParams> = ({ data }) => {\n  const { primary, items } = data\n  const bg = primary.background || 'primary.600'\n  const titleColor = primary.title_color || 'white'\n  const textColor = primary.text_color || 'white'\n\n  return (\n    <Box bg={bg} as=\"section\">\n      <Container as=\"div\" py={['4rem', '4.5rem']} textAlign=\"center\">\n        <Title as=\"h2\" size=\"sm\" mb=\"1.25rem\" color={titleColor}>\n          {primary.title.text}\n        </Title>\n        <Text size=\"xl\" color={textColor}>\n          {primary.subtitle.text}\n        </Text>\n        <Grid\n          columns={['1fr', 'repeat(2, 1fr)', '', 'repeat(3, 1fr)']}\n          spacing=\" 4rem 2rem\"\n          mt=\"4rem\"\n        >\n          {items.map((item, idx) => (\n            <Box key={idx}>\n              <Circle\n                width=\"3rem\"\n                height=\"3rem\"\n                bg={bg ? 'primary.50' : 'primary.25'}\n                color=\"primary.600\"\n                margin=\"0 auto\"\n              >\n                <Icons\n                  name={item.icon as IconsName}\n                  width=\"1.5rem\"\n                  height=\"1.5rem\"\n                />\n              </Circle>\n              <Box mt=\"1.25rem\">\n                <Text size=\"xl\" fontWeight=\"500\" mb=\"0.5rem\" color={titleColor}>\n                  {item.title.text}\n                </Text>\n                {item.description && (\n                  <Text color={textColor}>{item.description.text}</Text>\n                )}\n                {item.button_text.text && (\n                  <Button type=\"light\" mt=\"1.25rem\">\n                    {item.button_text.text}\n                  </Button>\n                )}\n              </Box>\n            </Box>\n          ))}\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\nexport default BannerSection\n","import styled from 'styled-components'\nimport { Grid } from 'components/theme'\nimport { Box, Flex } from 'styles/globalStyle'\n\nexport const TimelineText = styled(Box)`\n  text-align: unset;\n  margin-bottom: 1.5rem;\n  h3 {\n    span {\n      color: ${({ theme }) => theme.colors.primary[700]};\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.sm}) {\n    margin-bottom: 0;\n    text-align: ${({ textAlign }) => textAlign};\n  }\n`\n\nexport const TimelineRow = styled(Grid)<{ direction: string }>`\n  margin-top: 2.5rem;\n  grid-auto-flow: dense;\n  direction: unset;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: unset;\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.sm}) {\n    margin-top: 4.5rem;\n    direction: ${({ direction }) => direction};\n    gap: ${({ spacing }) => spacing};\n    display: grid;\n  }\n`\n\nexport const TimelineContainer = styled(Box)`\n  position: relative;\n  max-width: 100%;\n  margin: 0 auto;\n  .gatsby-image-wrapper {\n    border-radius: 1rem;\n    border: 2px solid ${({ theme }) => theme.colors.primary[500]};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.sm}) {\n    max-width: 90%;\n  }\n`\n\nexport const TimelineLine = styled(Box)`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  height: 100%;\n  padding-bottom: 4rem;\n  background: ${({ theme }) => theme.colors.primary[500]};\n  display: none;\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.sm}) {\n    display: block;\n  }\n`\n\nexport const TimelineNumber = styled(Box)`\n  position: static;\n  background: ${({ theme }) => theme.colors.primary[600]};\n  width: 2rem;\n  height: 2rem;\n  z-index: 1;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 1rem;\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.sm}) {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    margin-bottom: 0;\n  }\n`\n\nexport const TimelineButtons = styled(Flex)`\n  flex-direction: column;\n  direction: ltr;\n  margin-top: 2rem;\n  a:first-child {\n    margin-bottom: 0.75rem;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.sm}) {\n    align-items: flex-start;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.bp.xl}) {\n    flex-direction: row;\n    a:first-child {\n      margin-right: 0.75rem;\n    }\n  }\n`\n","import React, { FC } from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { Title, Text, Icons, Button } from 'components/theme'\nimport { Box, Container } from 'styles/globalStyle'\nimport {\n  TimelineButtons,\n  TimelineContainer,\n  TimelineLine,\n  TimelineNumber,\n  TimelineRow,\n  TimelineText,\n} from './style'\nimport { TimelineSectionTypes } from 'types/sections'\n\ntype TimelineSectionParams = {\n  data: TimelineSectionTypes\n}\n\nconst TimelineSection: FC<TimelineSectionParams> = ({ data }) => {\n  const { primary, items } = data\n  return (\n    <Box as=\"section\" bg=\"primary.25\">\n      <Container\n        as=\"div\"\n        textAlign=\"center\"\n        pt={['4rem', '6rem']}\n        pb={['4rem', '13rem']}\n      >\n        <Text mb=\"0.75rem\" fontWeight=\"600\" color=\"primary.700\">\n          {primary.subheading.text}\n        </Text>\n        <Title as=\"h2\" size=\"sm\">\n          {primary.title.text}\n        </Title>\n        <TimelineContainer>\n          {items.map((item, idx) => (\n            <TimelineRow\n              key={idx}\n              columns={['1fr', '', 'repeat(2, 1fr)']}\n              spacing=\"4.5rem 8rem\"\n              direction={idx % 2 === 0 ? 'tlr' : 'rtl'}\n            >\n              <TimelineNumber>\n                <Text color=\"white\">{idx + 1}</Text>\n              </TimelineNumber>\n              <TimelineText textAlign={idx % 2 === 0 ? 'right' : 'left'}>\n                <Title\n                  as=\"h3\"\n                  size=\"xs\"\n                  mb=\"1.25rem\"\n                  dangerouslySetInnerHTML={{\n                    __html: item.title.text,\n                  }}\n                />\n                <Text size=\"lg\">{item.description.text}</Text>\n                {item.buttons_active && (\n                  <TimelineButtons alignItems=\"center\">\n                    <Button type=\"light\" size=\"xl\" to=\"/\">\n                      <Icons\n                        name=\"headphones\"\n                        width=\"1rem\"\n                        height=\"1rem\"\n                        mr=\"0.5rem\"\n                      />\n                      Faire le test en ligne\n                    </Button>\n                    <Button type=\"gradient\" size=\"xl\" to=\"/appointment\">\n                      <Icons\n                        name=\"calendar\"\n                        width=\"1rem\"\n                        height=\"1rem\"\n                        mr=\"0.5rem\"\n                      />\n                      Prendre rendez-vous\n                    </Button>\n                  </TimelineButtons>\n                )}\n              </TimelineText>\n              <Box>\n                <GatsbyImage\n                  image={item.image.gatsbyImageData}\n                  alt={item.image.alt}\n                  style={{ width: '100%', height: 'auto' }}\n                  imgStyle={{ width: '100%', height: 'auto' }}\n                />\n              </Box>\n            </TimelineRow>\n          ))}\n          <TimelineLine />\n        </TimelineContainer>\n      </Container>\n    </Box>\n  )\n}\nexport default TimelineSection\n","import React, { FC } from 'react'\nimport { Container } from 'styles/globalStyle'\nimport { Title, Text, Accordion, Button, RichText } from 'components/theme'\nimport { FAQSectionTypes } from 'types/sections'\n\ntype FAQSectionParams = {\n  data: FAQSectionTypes\n}\n\nconst FAQSection: FC<FAQSectionParams> = ({ data }) => {\n  const { primary, items } = data\n  return (\n    <Container pt=\"3rem\" pb={['4rem', '6rem']} textAlign=\"center\" bg=\"white\">\n      <Title as=\"h2\" mb=\"1.25rem\">\n        {primary.title.text}\n      </Title>\n      <Text size=\"xl\" color=\"gray.400\" mb=\"2rem\">\n        {primary.subtitle.text}\n      </Text>\n      {primary.button_text.text && (\n        <Button type=\"primary\" size=\"xl\" to={primary.button_link.url} mb=\"3rem\">\n          {primary.button_text.text}\n        </Button>\n      )}\n      {items.map((item, idx) => (\n        <Accordion\n          key={idx}\n          title={item.question.text}\n          withBorder={idx !== items.length - 1}\n        >\n          <RichText content={item.response} isGrid />\n        </Accordion>\n      ))}\n    </Container>\n  )\n}\nexport default FAQSection\n","import styled from 'styled-components'\nimport { Box } from 'styles/globalStyle'\n\nexport const QuoteImage = styled(Box)`\n  .gatsby-image-wrapper {\n    border-radius: 1rem;\n    border: 2px solid ${({ theme }) => theme.colors.primary[500]};\n  }\n`\n","import React, { FC } from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { Icons, Title, Text, Button, Grid } from 'components/theme'\nimport { Box, Container, Flex } from 'styles/globalStyle'\nimport { QuoteImage } from './style'\nimport { QuoteSectionTypes } from 'types/sections'\n\ntype QuoteSectionParams = {\n  data: QuoteSectionTypes\n}\n\nconst QuoteSection: FC<QuoteSectionParams> = ({ data }) => {\n  const { primary } = data\n\n  return (\n    <Box as=\"section\" bg=\"primary.25\">\n      <Container py={['4rem', '6rem']} as=\"div\">\n        <Grid\n          columns={['1fr', '0.5fr 1fr']}\n          spacing={['2rem', '4rem', '4rem', '8rem']}\n          alignItems=\"center\"\n        >\n          <QuoteImage>\n            <GatsbyImage\n              image={primary.image.gatsbyImageData}\n              alt={primary.image.alt}\n            />\n          </QuoteImage>\n          <Box>\n            <Flex alignItems=\"center\" mb=\"1.5rem\">\n              {[...Array(primary.rating).keys()].map((nbr) => (\n                <Icons\n                  name=\"star\"\n                  key={nbr}\n                  mr=\"0.25rem\"\n                  width=\"1.25rem\"\n                  height=\"1.25rem\"\n                />\n              ))}\n            </Flex>\n            <Title as=\"h3\" size=\"sm\" fontWeight=\"500\" mb=\"2rem\">\n              {primary.title.text}\n            </Title>\n            <Text size=\"lg\" fontWeight=\"500\" color=\"gray.900\" mb=\"0.25rem\">\n              — {primary.author.text}\n            </Text>\n            <Text>{primary.position.text}</Text>\n            <Button\n              type=\"gradient\"\n              size=\"xxl\"\n              mt=\"3.75rem\"\n              to={primary.button_link.url}\n            >\n              <Icons\n                name=\"calendar\"\n                width=\"1.25rem\"\n                height=\"1.25rem\"\n                mr=\"1rem\"\n              />\n              {primary.button_text.text}\n            </Button>\n          </Box>\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\nexport default QuoteSection\n","import React, { FC } from 'react'\nimport CardSection from './CardSection'\nimport { SectionsTypes } from 'types/sections'\nimport ProductsSection from './ProductsSection'\nimport RichTextSection from './RichTextSection'\nimport FeaturesSection from './FeaturesSection'\nimport BannerSection from './BannerSection'\nimport TimelineSection from './TimelineSection'\nimport FAQSection from './FAQSection'\nimport QuoteSection from './QuoteSection'\n\ntype SliceSectionParams = {\n  data: SectionsTypes\n}\n\nconst SliceSection: FC<SliceSectionParams> = ({ data }) => {\n  switch (data.slice_type) {\n    case 'card_section':\n      return <CardSection data={data} />\n    case 'products_section':\n      return <ProductsSection data={data} />\n    case 'rich_text_section':\n      return <RichTextSection data={data} />\n    case 'features_section':\n      return <FeaturesSection data={data} />\n    case 'banner_section':\n      return <BannerSection data={data} />\n    case 'timeline_section':\n      return <TimelineSection data={data} />\n    case 'faq_section':\n      return <FAQSection data={data} />\n    case 'quote_section':\n      return <QuoteSection data={data} />\n    default:\n      break\n  }\n\n  return <div></div>\n}\nexport default SliceSection\n","import React, { FC } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from 'components/Layout'\nimport { Container, Hero, ImageBorder } from 'styles/globalStyle'\nimport { Title, Text, Icons, Button } from 'components/theme'\nimport { BasicPageTypes } from 'types/basicPageTypes'\nimport SliceSection from 'components/SliceSection'\n\ntype BasicPageParams = {\n  data: BasicPageTypes\n}\n\nconst BasicPage: FC<BasicPageParams> = ({ data }) => {\n  const {\n    hero_title,\n    hero_image,\n    hero_text,\n    hero_button_text,\n    hero_button_link,\n    body,\n  } = data.prismicBasicPage.data\n\n  return (\n    <Layout>\n      <Container>\n        <Hero>\n          <div>\n            <Title as=\"h1\" size=\"lg\" mb=\"1.5rem\">\n              {hero_title.text}\n            </Title>\n            <Text as=\"h2\" size=\"xl\" fontWeight=\"400\">\n              {hero_text.text}\n            </Text>\n            {hero_button_text.text && (\n              <Button\n                type=\"gradient\"\n                size=\"xxl\"\n                mt=\"3rem\"\n                to={hero_button_link.url}\n              >\n                <Icons\n                  name=\"calendar\"\n                  width=\"1.25rem\"\n                  height=\"1.25rem\"\n                  mr=\"1rem\"\n                />\n                {hero_button_text.text}\n              </Button>\n            )}\n          </div>\n          <ImageBorder\n            image={hero_image.gatsbyImageData}\n            alt={hero_image.alt}\n          />\n        </Hero>\n      </Container>\n      {body.map((item, idx) => (\n        <SliceSection key={idx} data={item} />\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($uid: String) {\n    prismicBasicPage(uid: { eq: $uid }) {\n      data {\n        ...PrismicBasicPageDataTypeFragment\n      }\n    }\n  }\n`\n\nexport default BasicPage\n"],"names":["StyledHead","styled","StyledCard","data","primary","items","React","Box","bg","as","Container","py","Text","color","fontWeight","subheading","text","Title","size","title","subtitle","Grid","columns","spacing","map","card","idx","key","ImageBorder","alt","image","gatsbyImageData","my","mb","flex","description","Button","type","to","button_link","url","button_text","background","textAlign","pt","pb","display","alignItems","flexDirection","maxWidth","m","product","itemBrand","product_brands","document","_product$product_bran","Link","uid","Flex","height","GatsbyImage","style","textTransform","name","item","Circle","width","Icons","icon","ml","mr","titleColor","title_color","textColor","text_color","mt","margin","TimelineText","withConfig","theme","colors","bp","sm","TimelineRow","direction","TimelineContainer","TimelineLine","TimelineNumber","TimelineButtons","xl","dangerouslySetInnerHTML","__html","buttons_active","imgStyle","Accordion","question","withBorder","length","RichText","content","response","isGrid","QuoteImage","_toConsumableArray","Array","rating","keys","nbr","author","position","slice_type","CardSection","ProductsSection","RichTextSection","FeaturesSection","BannerSection","TimelineSection","FAQSection","QuoteSection","prismicBasicPage","hero_title","hero_image","hero_text","hero_button_text","hero_button_link","body","Layout","Hero","SliceSection"],"sourceRoot":""}